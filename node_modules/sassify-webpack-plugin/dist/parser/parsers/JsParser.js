"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractParser_1 = require("../AbstractParser");
const pify = require('pify');
const fs = require('fs');
class JsParser extends AbstractParser_1.default {
    /**
     * Pass file to AbstractParser
     * @param file
     */
    constructor(file) {
        super(file);
    }
    /**
     * Run the parser
     * @returns {Promise<undefined>}
     */
    run() {
        return this.parse();
    }
    /**
     * Parse JavaScript file
     * @returns {Promise<void>}
     */
    parse() {
        return __awaiter(this, void 0, void 0, function* () {
            const fileContent = yield pify(fs.readFile)(this.file.source, 'utf-8');
            yield this.createTemplate(this.evaluateSource(fileContent));
        });
    }
}
exports.default = JsParser;
