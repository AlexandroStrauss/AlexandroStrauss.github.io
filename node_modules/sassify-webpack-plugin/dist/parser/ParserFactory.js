"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const FileType_1 = require("./enum/FileType");
const JsParser_1 = require("./parsers/JsParser");
const TsParser_1 = require("./parsers/TsParser");
class ParserFactory {
    constructor(file) {
        this._file = file;
    }
    /**
     * Get specified parser
     * @returns FileType
     */
    getParserType() {
        const fileExtension = this._file.source.split('.').pop().toUpperCase();
        return FileType_1.default[fileExtension];
    }
    /**
     * Get a predefined parser
     * @returns {TsParser|JsParser}
     */
    get parser() {
        const type = this.getParserType();
        let parser = null;
        switch (type) {
            case FileType_1.default.JS: {
                parser = new JsParser_1.default(this._file);
                break;
            }
            case FileType_1.default.TS: {
                parser = new TsParser_1.default(this._file);
                break;
            }
            default: {
                throw new Error(`
				[Parser] Unknown type ${type}. \n
				Available Parse Types: ${Object.keys(FileType_1.default).map(type => type.toLowerCase()).join(',')}.`);
            }
        }
        return parser;
    }
}
exports.default = ParserFactory;
